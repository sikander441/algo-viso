{"version":3,"sources":["components/Node/Node.js","components/Canvas/Canvas.js","App.js","index.js"],"names":["Node","state","x","props","y","handleDrag","e","ui","updateCord","idx","setState","circleStyle","background","this","bgColor","borderRadius","width","height","display","justifyContent","alignItems","position","top","left","disabled","defaultPosition","bounds","onDrag","style","onClick","clickHandler","fontSize","name","Component","Canvas","addEdge","u","v","edges","indexOf","push","updateEdges","createEdgeCords","EdgesBetweenNodes","nodes","i","length","edgeArray","j","x0","y0","x1","y1","handleCordChange","nodesList","isDrawingLine","nodeSelected","selectedNode","_onMouseMove","evt","console","log","pageX","pageY","mouseX","mouseY","yDiff","window","screenLeft","screenTop","screenY","colors","onMouseMove","widht","backgroundColor","map","edge","borderColor","borderWidth","borderStyle","Button","variant","nodeList","String","fromCharCode","createNode","forEach","element","disableNodeDrag","releaseLock","node","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72c4d219.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Node.css'\r\nimport Draggable from 'react-draggable';\r\n\r\nclass Node extends Component{\r\n    \r\n\r\n    state={\r\n        x:this.props.x,\r\n        y:this.props.y,\r\n    }\r\n\r\n    handleDrag = (e, ui) => {\r\n        this.props.updateCord(this.props.idx,ui.x,ui.y)\r\n        this.setState({\r\n            x: ui.x,\r\n            y: ui.y,\r\n        });\r\n      };\r\n\r\n    render(){\r\n        \r\n        var circleStyle = {\r\n        background: `radial-gradient(circle at 20px 30px, ${this.props.bgColor}, #000)`,\r\n        borderRadius: \"50%\",\r\n        width:75,\r\n        height:75,\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        position:'absolute',\r\n        top:this.props.y,\r\n        left:this.props.x\r\n      };\r\n      var textStyle = {\r\n         fontSize:'24px'\r\n      }\r\n    return (\r\n        <Draggable  disabled={this.props.disabled} defaultPosition={{x: 2, y: 0}} bounds = \"parent\" onDrag={this.handleDrag}>\r\n        <div style={circleStyle} onClick={ () => this.props.clickHandler(this.props.idx)}>\r\n        \r\n            <span style={textStyle}  >{this.props.name}</span>\r\n        </div>\r\n        \r\n        </Draggable>\r\n       \r\n    )\r\n\r\n    }\r\n\r\n        \r\n    \r\n}\r\n\r\n\r\nexport default Node\r\n","import React, { Component } from 'react'\r\nimport Node from '../Node/Node'\r\nimport { Button } from 'react-bootstrap';\r\nimport { Line } from 'react-lineto';\r\n\r\n\r\n\r\nexport default class Canvas extends Component{\r\n\r\n constructor(props){\r\n   super(props)\r\n   this.state={\r\n     nodes:[],\r\n     isDrawingLine:false,\r\n     edges:[],\r\n     mouseX:0,\r\n     mouseY:0,\r\n     EdgesBetweenNodes:[],\r\n     selectedNode:0,\r\n     nodeSelected:false,\r\n     yDiff:0\r\n   }\r\n }\r\n\r\n componentDidMount(){\r\n\r\n  console.log(window.screenLeft+' '+window.screenTop)\r\n   this.setState({yDiff:window.screenY}) \r\n }\r\n addEdge = (u,v) => {\r\n  var edges=this.state.edges;\r\n  if( edges[u].indexOf(v) === -1 )\r\n   edges[u].push(v);\r\n  this.setState({edges})\r\n }\r\n updateEdges = () => {\r\n  this.createEdgeCords();\r\n }\r\n createEdgeCords = () =>{\r\n  var edges = this.state.edges;\r\n  var EdgesBetweenNodes = []\r\n  const  nodes = this.state.nodes\r\n for(var i = 0; i < edges.length; i++ )\r\n {\r\n   if(edges[i].length === 0)continue;\r\n   var edgeArray = edges[i];\r\n  //  console.log(nodes)\r\n   for(var j = 0 ;j< edgeArray.length ; j++ ){\r\n     \r\n      EdgesBetweenNodes.push({x0:nodes[i].x,y0:nodes[i].y,x1:nodes[edgeArray[j]].x,y1:nodes[edgeArray[j]].y})\r\n   }\r\n }\r\n this.setState({EdgesBetweenNodes})\r\n}\r\n\r\n  handleCordChange = (idx,x,y)=>{\r\n    var nodesList = this.state.nodes;\r\n    nodesList[idx].x=x+30;\r\n    nodesList[idx].y=y+40;\r\n    this.setState({nodes:nodesList})\r\n    this.createEdgeCords()\r\n    \r\n    // console.log('updated cords' + x+' ' + y);\r\n  }\r\n\r\n  clickHandler = (idx) =>{\r\n    if(!this.state.isDrawingLine)\r\n      return\r\n    if(this.state.nodeSelected === true)\r\n    {\r\n      this.addEdge(this.state.selectedNode,idx)\r\n      this.setState({nodeSelected:false})\r\n      this.updateEdges()\r\n    }\r\n    else\r\n    this.setState({nodeSelected:true,selectedNode:idx})\r\n\r\n  }\r\n  _onMouseMove = (evt) => {\r\n    console.log(evt.pageX+' '+evt.pageY)\r\n    \r\n    this.setState({ mouseX: evt.pageX+10 , mouseY: evt.pageY+10 });\r\n  }\r\n  render()\r\n  {\r\n    var colors = [\"#d3ded3\", \"#E94F37\", \"#1C89BF\", \"#A1D363\",\r\n    \"#85FFC7\", \"#297373\", \"#FF8552\", \"#A40E4C\"];\r\n    var canvasStyle ={\r\n        widht:'100%',\r\n        height:'100vh',\r\n        backgroundColor:'#d3d3d3',\r\n        position:'relative',\r\n        \r\n    }\r\n\r\n\r\n      const releaseLock = () =>{\r\n      var nodeList = this.state.nodes;\r\n          \r\n      nodeList.forEach(element => {\r\n        element.disabled= false ;\r\n      });\r\n      this.setState({nodes:nodeList,isDrawingLine:false,nodeSelected:false});\r\n    }\r\n    \r\n    const disableNodeDrag = () =>{\r\n      var nodeList = this.state.nodes;\r\n      // this.updateEdges();\r\n      nodeList.forEach(element => {\r\n        element.disabled= true ;\r\n      });\r\n      this.setState({nodes:nodeList,isDrawingLine:true});\r\n     // console.log(nodeList)\r\n    }\r\n\r\n\r\n    const createNode = ()=>\r\n    { \r\n      let nodeList = this.state.nodes;\r\n      nodeList.push( {\r\n        bgColor:colors[this.state.nodes.length%7],\r\n        name:String.fromCharCode(nodeList.length+65),\r\n        idx:nodeList.length,\r\n        disabled:false,\r\n        x:0,\r\n        y:0\r\n      }\r\n      )\r\n      var edges = this.state.edges;\r\n      edges.push([])\r\n      this.setState({nodes:nodeList,edges});\r\n     // console.log(nodeList);\r\n    }\r\n\r\n    \r\n   \r\n  \r\n    return (\r\n      \r\n        <div onMouseMove={ this._onMouseMove } style={canvasStyle}>\r\n          {this.state.EdgesBetweenNodes.map(edge =>{\r\n            return  <Line borderColor=\"#CAC740\" borderWidth={5} x0={edge.x0} y0={edge.y0} x1={edge.x1} y1={edge.y1} />\r\n          })}\r\n          {this.state.isDrawingLine && this.state.nodeSelected? ( <Line borderColor=\"#E2E095\" borderWidth={3} borderStyle='dashed' x0={this.state.nodes[this.state.selectedNode].x} y0={this.state.nodes[this.state.selectedNode].y} x1={this.state.mouseX} y1={this.state.mouseY} />):null }\r\n          <center><Button variant=\"secondary\" onClick={()=>createNode()}>Create a Node</Button>\r\n          <Button variant=\"secondary\" onClick={()=>disableNodeDrag()}>Create Links</Button>\r\n          <Button variant=\"secondary\" onClick={()=>releaseLock()}>Release Lock</Button>\r\n\r\n          </center>\r\n        {this.state.nodes.map( node => {\r\n          return (<Node \r\n          bgColor={node.bgColor} \r\n          name={node.name} \r\n          idx={node.idx} \r\n          updateCord={(idx,x,y)=> this.handleCordChange(idx,x,y)}\r\n          clickHandler ={ (idx) => this.clickHandler(idx)}\r\n          disabled = {node.disabled}\r\n           />)\r\n        })}\r\n        \r\n        </div>\r\n       \r\n      );\r\n  }\r\n    \r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Canvas from './components/Canvas/Canvas'\r\n\r\nfunction App() {\r\n return (\r\n   <Canvas/>\r\n )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n   <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}